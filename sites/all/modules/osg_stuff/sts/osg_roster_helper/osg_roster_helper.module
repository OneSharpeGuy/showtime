<?php

/**
* @file osg_roster_helper.module
* TODO: Enter file description here.
*/

/**
* Implements hook_help().
*/
function osg_roster_helper_help($path, $arg)
{
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#block':
    return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href="@blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.',
      array('@blocks'=> url('admin/structure/block'))) . '</p>';

    // Help for another path in the block module
    case 'admin/structure/block':
    return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions. Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis. Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') .
    '</p>';
  }
}

function osg_roster_helper_extended_row($uid)
{
  $query = db_select('users', 'u');
  $query->leftJoin('field_data_field_phone_home', 'h', 'u.uid = h.entity_id');
  $query->leftJoin('field_data_field_phone_cell', 'c', 'u.uid = c.entity_id');
  $query->leftJoin('field_data_field_street_address', 'a',
    'u.uid = a.entity_id');
  $query->leftJoin('field_data_field_city_state', 's', 'u.uid = s.entity_id');
  $query->leftJoin('field_data_field_zipcode', 'z', 'u.uid = z.entity_id');
  $query->leftJoin('field_data_field_sig_other', 'g', 'u.uid = g.entity_id');
  $query->leftJoin('field_data_field_birthday', 'b', 'u.uid = b.entity_id');
  $query->addField('h', 'field_phone_home_value', 'home_phone');
  $query->addField('c', 'field_phone_cell_value', 'cell_phone');
  $query->addField('a', 'field_street_address_value', 'street_address');
  $query->addField('s', 'field_city_state_value', 'city_state');
  $query->addField('z', 'field_zipcode_value', 'zip_code');
  $query->addField('g', 'field_sig_other_value', 'spouse');
  $query->addField('b', 'field_birthday_value', 'birthday');
  $query->where('u.uid=:uid', array(':uid'=> $uid));

  $chunk = array();
  $result = $query->execute()->fetchAssoc();
  $style  = array('open' => '<span style="font-size: xx-small;">','close'=>
    '</span>');

  if (!empty($result['street_address'])) {
    $chunk[] = "";
    $chunk[] = $result['street_address'];
  }
  if (!empty($result['city_state'])) {
    $line = $result['city_state'];
    if (!empty($result['zip_code'])) {
      $line = $line . '  ' . $result['zip_code'];
    }
    $chunk[] = $line;
  }
  if (!empty($result['home_phone'])) {
    $chunk[] = $style['open'] . 'Home Phone:  ' . $style['close'] .
    osg_roster_helper_phone_number($result['home_phone']);
  }

  if (!empty($result['cell_phone'])) {

    $chunk[] = $style['open'] . 'Cell Phone:' . $style['close'] .
    osg_roster_helper_phone_number($result['cell_phone']);
  }
  if (!empty($result['spouse'])) {
    $chunk[] = "";

    $chunk[] = $style['open'] . 'Spouse: ' . $style['close'] . $result['spouse'];
  }
  if (!empty($result['birthday'])) {
    if (empty($result['spouse'])) {
      $chunk[] = "";
    }

    $chunk[] = $style['open'] . 'Birthday: ' . $style['close'] . $result['birthday'];
  }

  return join('<br>', $chunk);

}

function osg_roster_helper_phone_number($mynum)
{

  $phone = preg_replace('~.*(\d{3})[^\d]*(\d{3})[^\d]*(\d{4}).*~',
    '($1) $2-$3' . " \n", $mynum);
  return $phone;

} // end function format_phone_number
